-
  I create a Purchase Order with cost price 13.0 and inward freight 5.0.
-
  !record {model: purchase.order, id: purchase_order_1}:
    partner_id: base.res_partner_3
    invoice_method: 'order'
    inward_freight: 5.0
    order_line:
      - product_id: product.product_product_48
        product_qty: 1.0
        price_unit: 13.0
-
  I confirm the purchase order and supplier invoice is created.
-
  !workflow {model: purchase.order, ref: purchase_order_1, action: purchase_confirm}
-
  I select Purchase Freight and check that the untaxed Amount should be 13.0, and Total Amount should be 18.0.
-
  !python {model: purchase.order}: |
    purchase = self.browse(cr,uid,ref('purchase_order_1'))
    assert(purchase.amount_untaxed == 13.0), _('Untax Amount should be 13.0')
    assert(purchase.inward_freight == 5.0), _('Inward Freight should be 5.0')
    if purchase.company_id.freight:
        assert(purchase.amount_total == 18.0), _('Amount should be 18.0')
-
  I check that supplier invoice is created or not after confirming purchase order.
-
  !python {model: purchase.order}: |
    purchase_order_obj = self.browse(cr,uid,ref('purchase_order_1'))
    invoice_id = self.pool.get('account.invoice').search(cr, uid, [('partner_id','=',purchase_order_obj.partner_id.id),('origin','=',purchase_order_obj.name)])
    assert(invoice_id), _('Supplier Invoice should be created')
-
 In order to test PDF reports defined on invoice, we will print an tax Invoice Report.
-
  !python {model: account.invoice}: |
    from openerp import netsvc, tools
    import os
    purchase_order_obj = self.pool.get('purchase.order').browse(cr,uid,ref('purchase_order_1'))
    invoice_id = self.search(cr,uid,[('partner_id','=',purchase_order_obj.partner_id.id),('origin','=',purchase_order_obj.name)])
    (data, format) = netsvc.LocalService('report.account.invoice.tax.excise').create(cr, uid, invoice_id, {}, {})
    if tools.config['test_report_directory']:
        file(os.path.join(tools.config['test_report_directory'], 'account-invoice.'+format), 'wb+').write(data)
